version: "3"

services:
# [KAFKA]
  zookeeper:
    image: docker.io/bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: docker.io/bitnami/kafka:3.1
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_BROKER_ID=1
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
  kafkaui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8083:8080"
    depends_on:
      - kafka
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181

  postgres:
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    environment:
      - "POSTGRES_USER=user"
      - "POSTGRES_PASSWORD=user"
    volumes:
      - "./config/postgres/:/docker-entrypoint-initdb.d/"

# [WALLET-PRODUCER]
  producer:
    image: producer:0.1.0-SNAPSHOT
    ports:
      - 8081:8080
    environment:
      - "KAFKA_SERVER=kafka:9092"
    depends_on:
      - kafka

# [WALLET-AGGREGATOR]
  consumer:
    image: consumer:0.1.0-SNAPSHOT
    environment:
      - "KAFKA_SERVER=kafka:9092"
      - "DB_URL=jdbc:postgresql://postgres:5432/user"
    depends_on:
      - kafka
      - postgres

# [WALLET-API]
  stats:
    image: stats-server:0.1.0-SNAPSHOT
    ports:
      - 8080:8080
    environment:
      - "DB_URL=jdbc:postgresql://postgres:5432/user"
    depends_on:
      - postgres